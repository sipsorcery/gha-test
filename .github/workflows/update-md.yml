name: Update OS Versions Markdown

on:
  #push:
  #  branches: [ master ]
  pull_request:
    branches: [master]
  repository_dispatch:
    types: [update-md-command]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
 
  diags:
    runs-on: ubuntu-latest
    steps:
      - name: Dump the client payload context
        env:
          PAYLOAD_CONTEXT: ${{ toJson(github.event.client_payload) }}
        run: echo "$PAYLOAD_CONTEXT"
 
  winjob:
    runs-on: windows-latest
    steps:
      - name: Get OS version
        shell: pwsh
        run: |
          $x = Get-ComputerInfo | select WindowsProductName, WindowsVersion, OsHardwareAbstractionLayer | ft -HideTableHeaders
          echo $x
          echo $x >> winjob.txt
      - name: Upload result for winjob
        uses: actions/upload-artifact@v2
        with:
          name: results
          path: winjob.txt
          
  macjob:
    runs-on: macOS-latest
    steps:
      - name: Get OS version
        run: |
          x=$(uname -a)
          echo $x
          echo $x >> macjob.txt
      - name: Upload result for macjob
        uses: actions/upload-artifact@v2
        with:
          name: results
          path: macjob.txt
    
  ubuntujob:
    runs-on: ubuntu-latest
    steps:
      - name: Get OS version
        run: |
          x=$(uname -a)
          echo $x
          echo $x >> ubuntujob.txt
      - name: Upload result for ubuntujob
        uses: actions/upload-artifact@v2
        with:
          name: results
          path: ubuntujob.txt
    
  collate:
    runs-on: ubuntu-latest
    needs: [ winjob, macjob, ubuntujob ]
    steps:
      - uses: actions/checkout@v2
        if: github.event_name == 'repository_dispatch'
        with:
          ref: pull/${{ github.event.client_payload.pull_request.head.number }}/merge
      - uses: actions/checkout@v2
        if: github.event_name != 'repository_dispatch'
      - name: Dump commit ref (testing if PR or not)
        run: |
          echo "github.event.client_payload.pull_request.head.ref=${{ github.event.client_payload.pull_request.head.ref }}."
          echo "github.event_name=${{ github.event_name }}."
          echo "GITHUB_SHA=$GITHUB_SHA."
          git status
          git log -n 3
      - name: Download results
        uses: actions/download-artifact@v2
        with:
          name: results
      - name: Collate result files
        run: |
          ls
      - name: Write the markdown file
        run: |
          #echo "::set-output name=date::$(date)"
          printf "GitHub Actions OS Versions at $(date)\n\n" > osversions.md
          printf "**windows-latest**\n" >> osversions.md
          printf "> $(cat winjob.txt | grep -v '^[[:space:]]*$')\n\n" >> osversions.md
          printf "**macOS-latest**\n" >> osversions.md
          printf "> $(cat macjob.txt)\n\n" >> osversions.md
          printf "**ubuntu-latest**\n" >> osversions.md
          printf "> $(cat ubuntujob.txt)\n\n" >> osversions.md
          cat osversions.md
      - name: Commit the updated markdown file
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit osversions.md -m "Automated update for osversions.md."
          git push
